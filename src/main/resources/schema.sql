DROP TABLE IF EXISTS FILM_GENRE CASCADE;
DROP TABLE IF EXISTS FILM_LIKES CASCADE;
DROP TABLE IF EXISTS FILMS CASCADE;
DROP TABLE IF EXISTS GENRE CASCADE;
DROP TABLE IF EXISTS RATING_MPA CASCADE;
DROP TABLE IF EXISTS USERS_FRIENDS CASCADE;
DROP TABLE IF EXISTS USERS CASCADE;

CREATE TABLE USERS
(
    id        INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email     CHARACTER VARYING NOT NULL,
    login     CHARACTER VARYING NOT NULL,
    name      CHARACTER VARYING,
    birthday  DATE              NOT NULL,
    UNIQUE (email, login)
);

CREATE TABLE USERS_FRIENDS
(
    user_id   INTEGER REFERENCES USERS (id) ON DELETE CASCADE,
    user_friend_id INTEGER REFERENCES USERS (id) ON DELETE CASCADE,
    PRIMARY KEY (user_id, user_friend_id)
);

CREATE TABLE RATING_MPA
(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR,
    description VARCHAR
);

CREATE TABLE FILMS
(
    id        INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name      CHARACTER VARYING NOT NULL,
    description VARCHAR(200) NOT NULL,
    release_date DATE,
    duration INTEGER,
    rating_id INTEGER REFERENCES RATING_MPA (id),
    UNIQUE (name, description, release_date, duration)
);

CREATE TABLE FILM_LIKES
(
    film_id INTEGER REFERENCES FILMS (id) ON DELETE CASCADE,
    user_id INTEGER REFERENCES USERS (id) ON DELETE CASCADE,
    PRIMARY KEY (film_id, user_id)
);

CREATE TABLE GENRE
(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    genre VARCHAR
);

CREATE TABLE FILM_GENRE
(
    film_id INTEGER REFERENCES FILMS (id) ON DELETE CASCADE,
    genre_id INTEGER REFERENCES GENRE (id) ON DELETE CASCADE,
    PRIMARY KEY (film_id, genre_id)
);
